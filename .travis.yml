env:
  global:
    SCRIPTS=/dups/data/scripts/travis

  matrix:
    # DIST: Distribution / Release name.
    # PYTHON: Python executable name on the given dist.
    # PKG_DIR: Relative path (inside the container) to the pacakge dir for the
    #   given dist.
    # RELEASE_FILE: Absolute path (inside the container) to where to
    #   store the built release package.

    - DIST=archlinux
      PYTHON=python
      PKG_DIR=data/pkg/archlinux
      RELEASE_FILE=/builds/python-dups-${DIST}.pkg.tar.xz

    - DIST=bionic
      PYTHON=python3
      PKG_DIR=data/pkg/debian
      RELEASE_FILE=/builds/python3-dups-${DIST}.deb

    - DIST=stretch
      PYTHON=python3
      PKG_DIR=data/pkg/debian
      RELEASE_FILE=/builds/python3-dups-${DIST}.deb

sudo: required
language: generic

services:
  - docker

install:
  - |
    docker build -f data/docker/Dockerfile.${DIST} \
      --pull --tag linuxwhatelse/dups-${DIST} .

script:
  # Run all unittests
  - |
    docker run --rm -it -v $(pwd):/dups:ro linuxwhatelse/dups-${DIST} \
      ${SCRIPTS}/test-dups.sh ${PYTHON}

  # Build package for each distribution
  - |
    docker run --rm -it -v $(pwd):/dups:ro  -v /builds:/builds \
      linuxwhatelse/dups-${DIST} \
      ${SCRIPTS}/test-build.sh ${PKG_DIR} ${RELEASE_FILE}

  # Try and install the previously built package
  - |
    docker run --rm -it -v $(pwd):/dups:ro  -v /builds:/builds \
      linuxwhatelse/dups-${DIST} \
      ${SCRIPTS}/test-install.sh ${PKG_DIR} ${RELEASE_FILE}

